Log, Field Name, Type, UDM Field, Type, Description

conn, ts, (time), , , This is the time of the first packet.
conn, uid, (string), , , A unique identifier of the connection.
conn, id.orig_h, (string - addr), principal_ip, , The originator's IP address.
conn, id.orig_p, (integer - port), principal_port, , The originator's port number.
conn, id.resp_h, (string - addr), target_ip, , The responder's IP address.
conn, id.resp_p, (integer - port), target_port, , The responder's port number.
conn, proto, (string - enum), network_ip_protocol, , The transport layer protocol of the connection.
conn, service, (string), network_application_protocol, , An identification of an application protocol being sent over the connection.
conn, duration, (number - interval), , , How long the connection lasted.  For 3-way or 4-way connection tear-downs - this will not include the final ACK.
conn, orig_bytes, (integer - count), network_sent_bytes, uinteger, The number of payload bytes the originator sent. For TCP this is taken from sequence numbers and might be inaccurate (e.g. due to large connections).
conn, resp_bytes, (integer - count), network_received_bytes, uinteger, The number of payload bytes the responder sent. See *orig_bytes*.
conn, conn_state, (string), metadata_description, , The state of the connection.
conn, local_orig, (boolean - bool), , , If the connection is originated locally - this value will be T. If it was originated remotely it will be F.  In the case that the `Site::local_nets` variable is undefined - this field will be left empty at all times.
conn, local_resp, (boolean - bool), , , If the connection is responded to locally - this value will be T. If it was responded to remotely it will be F.  In the case that the `Site::local_nets` variable is undefined - this field will be left empty at all times.
conn, missed_bytes, (integer - count), , , Indicates the number of bytes missed in content gaps - which is representative of packet loss.  A value other than zero will normally cause protocol analysis to fail but some analysis may have been completed prior to the packet loss.
conn, history, (string), , , Records the state history of connections as a string of letters.  The meaning of those letters is:
conn, orig_pkts, (integer - count), , , Number of packets that the originator sent. Only set if `use_conn_size_analyzer` = T.
conn, orig_ip_bytes, (integer - count), , , Number of IP level bytes that the originator sent (as seen on the wire - taken from the IP total_length header field). Only set if `use_conn_size_analyzer` = T.
conn, resp_pkts, (integer - count), , , Number of packets that the responder sent. Only set if `use_conn_size_analyzer` = T.
conn, resp_ip_bytes, (integer - count), , , Number of IP level bytes that the responder sent (as seen on the wire - taken from the IP total_length header field). Only set if `use_conn_size_analyzer` = T.
conn, tunnel_parents, (array[string] - set[string]), , , If this connection was over a tunnel - indicate the *uid* values for any encapsulating parent connections used over the lifetime of this inner connection.
conn, orig_cc, (string), , , The name of the node where this connection was analyzed. Country code for GeoIP lookup of the originating IP address.
conn, resp_cc, (string), , , Country code for GeoIP lookup of the responding IP address.
conn, suri_ids, (array[string] - set[string]), , , The suri_ids information.
conn, spcap.url, (string), , , The spcap.url information.
conn, spcap.rule, (integer - count), , , The spcap.rule information.
conn, spcap.trigger, (string), , , The spcap.trigger information.
conn, app, (array[string] - vector of string), , , The app information.
conn, corelight_shunted, (boolean - bool), , , The corelight_shunted information.
conn, orig_shunted_pkts, (integer - count), , , The orig_shunted_pkts information.
conn, orig_shunted_bytes, (integer - count), , , The orig_shunted_bytes information.
conn, resp_shunted_pkts, (integer - count), , , The resp_shunted_pkts information.
conn, resp_shunted_bytes, (integer - count), , , The resp_shunted_bytes information.
conn, orig_l2_addr, (string), , , Link-layer address of the originator (if available).
conn, resp_l2_addr, (string), , , Link-layer address of the responder (if available).
conn, id_orig_h_n.src, (string), , , How we determined the name/address pair. Either ``DNS_A`` representing the DNS_A* family of query types - or ``DNS_PTR`` for reverse DNS lookups.
conn, id_orig_h_n.vals, (array[string] - set[string]), , , The set of names we observed for a given address.
conn, id_resp_h_n.src, (string), , , How we determined the name/address pair. Either ``DNS_A`` representing the DNS_A* family of query types - or ``DNS_PTR`` for reverse DNS lookups.
conn, id_resp_h_n.vals, (array[string] - set[string]), , , The set of names we observed for a given address.
conn, vlan, (integer - int), , , The outer VLAN for this connection (if applicable).
conn, inner_vlan, (integer - int), , , The inner VLAN for this connection (if applicable).
conn, community_id, (string), event1.idm.read_only_udm.network.community_id, , The community_id information.

dns, ts, time, date, , The earliest time at which a DNS protocol message over the associated connection is observed.
dns, uid, string, metadata_product_log_id, , A unique identifier of the connection over which DNS messages are being transferred.
dns, id.orig_h, string, principal_ip, , The originator's IP address.
dns, id.orig_p, string, principal_port, string, The originator's port number.
dns, id.resp_h, string, target_ip, , The responder's IP address.
dns, id.resp_p, string, target_port, string, The responder's port number.
dns, proto, string, network_ip_protocol, , The transport layer protocol of the connection.
dns, trans_id, integer, , , A 16-bit identifier assigned by the program that generated the DNS query.  Also used in responses to match up replies to outstanding queries.
dns, rtt, number, , , Round trip time for the query and response. This indicates the delay between when the request was seen until the answer started.
dns, query, string, dns_question.name, , The domain name that is the subject of the DNS query.
dns, qclass, integer, dns_question.class, uinteger, The QCLASS value specifying the class of the query.
dns, qclass_name, string, metadata_description, , A descriptive name for the class of the query.
dns, qtype, integer, dns_question.type, uinteger, A QTYPE value specifying the type of the query.
dns, qtype_name, string, , , A descriptive name for the type of the query.
dns, rcode, integer, network_dns_response_code, uinteger, The response code value in DNS response messages.
dns, rcode_name, string, , , A descriptive name for the response code value.
dns, AA, boolean, dns.authoritative, , The Authoritative Answer bit for response messages specifies that the responding name server is an authority for the domain name in the question section.
dns, TC, boolean, dns.truncated, , The Truncation bit specifies that the message was truncated.
dns, RD, boolean, dns.recursion_desired, , The Recursion Desired bit in a request message indicates that the client wants recursive service for this query.
dns, RA, boolean, dns.recursion_available, , The Recursion Available bit in a response message indicates that the name server supports recursive queries.
dns, Z, integer, , , A reserved field that is usually zero in queries and responses.
dns, answers, array[string], dns_answer.name, vector of string, The set of resource descriptions in the query answer.
dns, TTLs, array[number], , vector of interval, The caching intervals of the associated RRs described by the *answers* field.
dns, rejected, boolean, , , The DNS query was rejected by the server.
dns, is_trusted_domain, string, , , The is_trusted_domain information.
dns, icann_host_subdomain, string, , , The icann_host_subdomain information.
dns, icann_domain, string, event1.idm.read_only_udm.network.dns_domain, , The icann_domain information.
dns, icann_tld, string, , , The icann_tld information.

dns_red, ts, time, date, , The earliest time at which a DNS protocol message over the associated connection is observed.
dns_red, uid, string, metadata_product_log_id, , A unique identifier of the connection over which DNS messages are being transferred.
dns_red, id.orig_h, string, principal_ip, , The originator's IP address.
dns_red, id.orig_p, string, principal_port, string, The originator's port number.
dns_red, id.resp_h, string, target_ip, , The responder's IP address.
dns_red, id.resp_p, string, target_port, string, The responder's port number.
dns_red, query, string, dns_question.name, , The domain name that is the subject of the DNS query.
dns_red, qtype_name, string, , , A descriptive name for the type of the query.
dns_red, rcode, integer, network_dns_response_code, uinteger, The response code value in DNS response messages.
dns_red, answers, array[string], dns_answer.name, vector of string, The set of resource descriptions in the query answer.
dns_red, num,integer, , , How often we've seen this query in this coalescence interval.
