Log, Field Name, Type, UDM Field, Type, Description

files_red, , , metadata_vendor_name, , replace with 'Corelight'
files_red, , , metadata_event_type, , replace with 'FILE_UNCATEGORIZED'
files_red, , , metadata_product_name, , replace with 'Zeek'
files_red, , , principal_ip, , replace with '%{tx_hosts.0}'
files_red, , , principal_hostname, , replace with '%{tx_hosts.0}'
files_red, , , target_ip, , replace with '%{rx_hosts.0}'
files_red, ts, time, , , The time when the file was first seen.
files_red, fuid, string, metadata_product_log_id, , An identifier associated with a single file.
files_red, tx_hosts, array[string], , , If this file was transferred over a network connection this should show the host or hosts that the data sourced from.
files_red, rx_hosts, array[string], , , If this file was transferred over a network connection this should show the host or hosts that the data traveled to.
files_red, conn_uids, array[string], , , Connection UIDs over which the file was transferred.
files_red, source, string, , , An identification of the source of the file data.  E.g. it may be a network protocol over which it was transferred or a local file path which was read or some other input source.
files_red, depth, integer, , , A value to represent the depth of this file in relation to its source.  In SMTP it is the depth of the MIME attachment on the message.  In HTTP it is the depth of the request within the TCP connection.
files_red, analyzers, array[string], , , A set of analysis types done during the file analysis.
files_red, mime_type, string, target_file_mime_type, , A mime type provided by the strongest file magic signature match against the *bof_buffer* field of `fa_file` or in the cases where no buffering of the beginning of file occurs an initial guess of the mime type based on the first data seen.
files_red, filename, string, target_file_full_path, , A filename for the file if one is available from the source for the file.  These will frequently come from 'Content-Disposition' headers in network protocols.
files_red, local_orig, boolean, , , If the source of this file is a network connection this field indicates if the data originated from the local network or not as determined by the configured `Site::local_nets`.
files_red, is_orig, boolean, , , If the source of this file is a network connection this field indicates if the file is being sent by the originator of the connection or the responder.
files_red, seen_bytes, integer, target_file_size, , Number of bytes provided to the file analysis engine for the file.
files_red, total_bytes, integer, , , Total number of bytes that are supposed to comprise the full file.
files_red, missing_bytes, integer, , , The number of bytes in the file stream that were completely missed during the process of analysis e.g. due to dropped packets.
files_red, overflow_bytes, integer, , , The number of bytes in the file stream that were not delivered to stream file analyzers.  This could be overlapping bytes or bytes that couldn't be reassembled.
files_red, timedout, boolean - bool, , , Whether the file analysis timed out at least once for the file.
files_red, parent_fuid, string, , , Identifier associated with a container file from which this one was extracted as part of the file analysis.
files_red, md5, string, target_file_md5, , An MD5 digest of the file contents.
files_red, sha1, string, target_file_sha1, , A SHA1 digest of the file contents.
files_red, sha256, string, target_file_sha256, , A SHA256 digest of the file contents.
files_red, extracted, string, about.file.full_path, , Local filename of extracted file.
files_red, extracted_cutoff, boolean, , , Set to true if the file being extracted was cut off so the whole file was not logged.
files_red, extracted_size, integer, , , The number of bytes extracted to disk.
files_red, num, integer, , , Number of times we've seen this file.
